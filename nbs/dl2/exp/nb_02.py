
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/02_CNN_From_Scratch.ipynb

from exp.nb_01 import *

def getMnistData():
    path = datasets.download_data(MNIST_URL, ext='.gz')
    with gzip.open(path, 'rb') as f:
        ((x_train, y_train), (x_valid, y_valid), _) = pickle.load(f, encoding='latin-1')
    return map(lambda data: tensor(data), (x_train,y_train,x_valid,y_valid))

def normalizeVector(vectorToNormalize, vectorMean, vectorStandardDeviation):
    return (vectorToNormalize-vectorMean)/vectorStandardDeviation

def assertNearZero(someScalar,tol=1e-3): assert someScalar.abs()<tol, f"Near zero: {someScalar}"

from torch.nn import init

def assertSameShape(actualVector, expectedVector):
    assert actualVector.shape == expectedVector.shape, "Input vectors do not have the same shape! {} and {}".format(actualVector.shape, expectedVector.shape)
def meanSquaredError(actualVector, expectedVector):
    assertSameShape(actualVector, expectedVector)
    return (actualVector - expectedVector).pow(2).mean()
